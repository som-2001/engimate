# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master" ]
jobs:
  build:

    runs-on: ubuntu-latest
    env:
      REACT_APP_BASEURl: 'http://localhost:8000/api'
      REACT_APP_URl: 'http://localhost:8000/api/user'
      NODE_ENV: 'production'
      PORT: '8000'
    
    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install Server Dependencies
      working-directory: ./server
      run: npm install

      # Install frontend dependencies
    - name: Install Frontend Dependencies
      working-directory: ./frontend
      run: npm install
      # Build the React frontend
    - name: Build React App
      working-directory: ./frontend
      run: |
        npm run build
    - name: Deploy Backend and Restart PM2
      run: |
        ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_IP }} '
          pm2 stop all || true  # Stop all running pm2 processes
          pm2 start server/index.js --name "mern-backend"  # Start the backend server
        '

      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
      
      # Deploy to server (SSH)
    - name: Deploy Frontend and Restart Nginx
      run: |
          # Copy React build files to the server's Nginx web root
          scp -r ./frontend/build/* user@your-server-ip:/var/www/html/

          # Restart Nginx on the server to serve updated build
          ssh ubuntu@ip-172-31-0-179 'sudo systemctl reload nginx'
      env:
        # These secrets are stored securely in GitHub Secrets
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_USER: ${{ secrets.SERVER_USER }}
